{"version":3,"sources":["webpack://elemental-1.0.0/./machine-config/machineinventoryselectortemplate.vue?aeb1","webpack://elemental-1.0.0/machine-config/machineinventoryselectortemplate.vue","webpack://elemental-1.0.0/./machine-config/machineinventoryselectortemplate.vue?baf2","webpack://elemental-1.0.0/./machine-config/machineinventoryselectortemplate.vue","webpack://elemental-1.0.0//home/runner/work/elemental-ui/elemental-ui/node_modules/@rancher/shell/machine-config/generic.vue?c4ea","webpack://elemental-1.0.0/../../node_modules/@rancher/shell/machine-config/generic.vue","webpack://elemental-1.0.0//home/runner/work/elemental-ui/elemental-ui/node_modules/@rancher/shell/machine-config/generic.vue?8267","webpack://elemental-1.0.0//home/runner/work/elemental-ui/elemental-ui/node_modules/@rancher/shell/machine-config/generic.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","directives","name","rawName","value","expression","staticClass","attrs","mode","expressions","machineInventorySelectorKeyOptions","on","$event","matchChanged","matchingMachineInventories","isNone","isAll","domProps","_s","t","_e","staticRenderFns","components","MatchExpressions","Banner","mixins","type","label","data","matchExpressions","matchLabels","key","operator","values","machineInventories","methods","set","getUniqueLabels","arr","objKeys","uniqueLabels","updateMatchingMachineInventories","matched","total","sample","leading","component","$fetchState","errors","_l","err","idx","stringify","fields","cloudCredentialKeys","metadata","namespace","disabled","model","callback","$$v","Loading","Questions","props","credentialId","required","provider","default","fetch","computed","watch"],"mappings":"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","file":"elemental-1.0.0.umd.min.machine-config.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h2',{directives:[{name:\"t\",rawName:\"v-t\",value:('elemental.clusterGroup.selector.label'),expression:\"'elemental.clusterGroup.selector.label'\"}],staticClass:\"mt-20 mb-20\"}),_c('MatchExpressions',{attrs:{\"mode\":_vm.mode,\"value\":_vm.expressions,\"show-remove\":false,\"keys-select-options\":_vm.machineInventorySelectorKeyOptions},on:{\"input\":function($event){return _vm.matchChanged($event)}}}),(_vm.matchingMachineInventories)?_c('Banner',{attrs:{\"color\":(_vm.matchingMachineInventories.isNone || _vm.matchingMachineInventories.isAll ? 'warning' : 'success')}},[(_vm.matchingMachineInventories.isAll)?_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.t('elemental.clusterGroup.selector.matchesAll', _vm.matchingMachineInventories))}}):(_vm.matchingMachineInventories.isNone)?_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.t('elemental.clusterGroup.selector.matchesNone', _vm.matchingMachineInventories))}}):_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.t('elemental.clusterGroup.selector.matchesSome', _vm.matchingMachineInventories))}})]):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { Banner } from '@components/Banner';\nimport { set } from '@shell/utils/object';\nimport { convert, matching, simplify } from '@shell/utils/selector';\nimport throttle from 'lodash/throttle';\nimport { ELEMENTAL_SCHEMA_IDS } from '../config/elemental-types';\n\nexport default {\n  components: { MatchExpressions, Banner },\n  mixins:     [CreateEditView],\n  async fetch() {\n    this.machineInventories = await this.$store.dispatch('management/findAll', { type: ELEMENTAL_SCHEMA_IDS.MACHINE_INVENTORIES });\n    this.machineInventorySelectorKeyOptions = this.getUniqueLabels(this.machineInventories).map((item) => {\n      return {\n        label: item,\n        value: item\n      };\n    });\n    this.updateMatchingMachineInventories();\n  },\n  data() {\n    if ( !this.value.spec?.template?.spec?.selector ) {\n      this.value.spec.template.spec = this.value.spec.template.spec || {};\n      this.value.spec.template.spec.selector = {\n        matchExpressions: [],\n        matchLabels:      {},\n      };\n    }\n\n    // TODO: this should only run if Elemental is installed... maybe prevent the display of Elemental type in cluster create selection screen if\n    // helm chart is not installed\n    const prePopulatedClusterElements = this.$store.getters['elemental/createClusterElements'];\n\n    // pre-populate the selectors if we come from the create cluster action on machine inventories list\n    if (prePopulatedClusterElements.length) {\n      this.value.spec.template.spec.selector.matchExpressions.push({\n        key:      'create-cluster-selector',\n        operator: 'In',\n        values:   [prePopulatedClusterElements[0].metadata.labels['create-cluster-selector']],\n      });\n\n      if (!this.value.spec?.template?.spec?.selector?.matchLabels) {\n        this.value.spec.template.spec.selector.matchLabels = {};\n      }\n\n      this.value.spec.template.spec.selector.matchLabels['create-cluster-selector'] = prePopulatedClusterElements[0].metadata.labels['create-cluster-selector'];\n\n      // cleanup so that it doesn't get reused inadvertedly\n      this.$store.dispatch('elemental/updateCreateClusterElements', []);\n    }\n\n    const expressions = convert(\n      this.value.spec.template.spec.selector.matchLabels || {},\n      this.value.spec.template.spec.selector.matchExpressions || []\n    );\n\n    return {\n      machineInventories:                 null,\n      matchingMachineInventories:         null,\n      machineInventorySelectorKeyOptions: null,\n      expressions\n    };\n  },\n  methods: {\n    set,\n    getUniqueLabels(arr) {\n      const uniqueLabels = [];\n\n      arr.forEach((item) => {\n        if (item.metadata?.labels && Object.keys(item.metadata?.labels).length) {\n          const objKeys = Object.keys(item.metadata?.labels);\n\n          objKeys.forEach((key) => {\n            if (!uniqueLabels.includes(key)) {\n              uniqueLabels.push(key);\n            }\n          });\n        }\n      });\n\n      return uniqueLabels;\n    },\n    matchChanged(expressions) {\n      const { matchLabels, matchExpressions } = simplify(expressions);\n\n      set(this, 'expressions', expressions);\n      set(this, 'value.spec.template.spec.selector.matchLabels', matchLabels);\n      set(this, 'value.spec.template.spec.selector.matchExpressions', matchExpressions);\n\n      this.updateMatchingMachineInventories();\n    },\n\n    updateMatchingMachineInventories: throttle(function() {\n      const all = this.machineInventories;\n      const match = matching(all, this.expressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      this.matchingMachineInventories = {\n        matched,\n        total:   all.length,\n        isAll:   matched === all.length,\n        isNone:  matched === 0,\n        sample,\n      };\n\n      // emit matched machine inventories on selector so that machine count\n      // on machine pool can be kept up to date\n      this.$emit('updateMachineCount', matched);\n    }, 250, { leading: true })\n  },\n};\n</script>\n\n<template>\n  <div>\n    <h2 v-t=\"'elemental.clusterGroup.selector.label'\" class=\"mt-20 mb-20\" />\n    <MatchExpressions\n      :mode=\"mode\"\n      :value=\"expressions\"\n      :show-remove=\"false\"\n      :keys-select-options=\"machineInventorySelectorKeyOptions\"\n      @input=\"matchChanged($event)\"\n    />\n    <Banner v-if=\"matchingMachineInventories\" :color=\"(matchingMachineInventories.isNone || matchingMachineInventories.isAll ? 'warning' : 'success')\">\n      <span v-if=\"matchingMachineInventories.isAll\" v-html=\"t('elemental.clusterGroup.selector.matchesAll', matchingMachineInventories)\" />\n      <span v-else-if=\"matchingMachineInventories.isNone\" v-html=\"t('elemental.clusterGroup.selector.matchesNone', matchingMachineInventories)\" />\n      <span\n        v-else\n        v-html=\"t('elemental.clusterGroup.selector.matchesSome', matchingMachineInventories)\"\n      />\n    </Banner>\n  </div>\n</template>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./machineinventoryselectortemplate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./machineinventoryselectortemplate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./machineinventoryselectortemplate.vue?vue&type=template&id=6935aaa6&\"\nimport script from \"./machineinventoryselectortemplate.vue?vue&type=script&lang=js&\"\nexport * from \"./machineinventoryselectortemplate.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.$fetchState.pending)?_c('Loading',{attrs:{\"delayed\":true}}):(_vm.errors.length)?_c('div',_vm._l((_vm.errors),function(err,idx){return _c('div',{key:idx},[_c('Banner',{attrs:{\"color\":\"error\",\"label\":_vm.stringify(err)}})],1)}),0):_c('div',[_c('Questions',{attrs:{\"mode\":_vm.mode,\"tabbed\":false,\"source\":_vm.fields,\"ignore-variables\":_vm.cloudCredentialKeys,\"target-namespace\":_vm.value.metadata.namespace,\"disabled\":_vm.disabled},model:{value:(_vm.value),callback:function ($$v) {_vm.value=$$v},expression:\"value\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { exceptionToErrorsArray, stringify } from '@shell/utils/error';\nimport Questions from '@shell/components/Questions';\n\nexport default {\n  components: {\n    Loading, Banner, Questions\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    credentialId: {\n      type:     String,\n      required: true,\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  fetch() {\n    this.errors = [];\n\n    try {\n      this.fields = this.$store.getters['plugins/fieldsForDriver'](this.provider);\n      const name = `rke-machine-config.cattle.io.${ this.provider }config`;\n\n      if ( !this.fields ) {\n        throw new Error(`Machine Driver config schema not found for ${ name }`);\n      }\n    } catch (e) {\n      this.errors = exceptionToErrorsArray(e);\n    }\n  },\n\n  data() {\n    return {\n      errors: null,\n      fields: null,\n    };\n  },\n\n  computed: {\n    cloudCredentialKeys() {\n      const normanType = this.$store.getters['plugins/credentialFieldForDriver'](this.provider);\n      const normanSchema = this.$store.getters['rancher/schemaFor'](`${ normanType }credentialconfig`);\n\n      if ( normanSchema ) {\n        return Object.keys(normanSchema.resourceFields || {});\n      } else {\n        return this.$store.getters['plugins/fieldNamesForDriver'](this.provider);\n      }\n    }\n  },\n\n  watch: {\n    'credentialId'() {\n      this.$fetch();\n    },\n  },\n\n  methods: { stringify },\n};\n</script>\n\n<template>\n  <Loading\n    v-if=\"$fetchState.pending\"\n    :delayed=\"true\"\n  />\n  <div v-else-if=\"errors.length\">\n    <div\n      v-for=\"(err, idx) in errors\"\n      :key=\"idx\"\n    >\n      <Banner\n        color=\"error\"\n        :label=\"stringify(err)\"\n      />\n    </div>\n  </div>\n  <div v-else>\n    <Questions\n      v-model=\"value\"\n      :mode=\"mode\"\n      :tabbed=\"false\"\n      :source=\"fields\"\n      :ignore-variables=\"cloudCredentialKeys\"\n      :target-namespace=\"value.metadata.namespace\"\n      :disabled=\"disabled\"\n    />\n  </div>\n</template>\n","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--14-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--2-0!../../../@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./generic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--14-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--2-0!../../../@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./generic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./generic.vue?vue&type=template&id=c8f8ce54&\"\nimport script from \"./generic.vue?vue&type=script&lang=js&\"\nexport * from \"./generic.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}