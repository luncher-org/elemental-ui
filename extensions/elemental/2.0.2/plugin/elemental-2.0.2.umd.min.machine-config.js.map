{"version":3,"sources":["webpack://elemental-2.0.2/./machine-config/machineinventoryselectortemplate.vue","webpack://elemental-2.0.2/machine-config/machineinventoryselectortemplate.vue","webpack://elemental-2.0.2/./machine-config/machineinventoryselectortemplate.vue?b813","webpack://elemental-2.0.2/./machine-config/machineinventoryselectortemplate.vue?b3a8","webpack://elemental-2.0.2/./machine-config/machineinventoryselectortemplate.vue?8c2a","webpack://elemental-2.0.2/./machine-config/machineinventoryselectortemplate.vue?00c4","webpack://elemental-2.0.2/./machine-config/machineinventoryselectortemplate.vue?9cbe"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","expression","staticClass","_v","_s","t","attrs","mode","elementalType","expressions","machineInventorySelectorKeyOptions","on","$event","matchChanged","matchingMachineInventories","isNone","isAll","_e","staticRenderFns","components","MatchExpressions","Banner","mixins","CreateEditView","machineInventories","$store","dispatch","type","ELEMENTAL_SCHEMA_IDS","MACHINE_INVENTORIES","getUniqueLabels","map","item","label","updateMatchingMachineInventories","data","_this$value$spec","spec","template","selector","matchExpressions","matchLabels","prePopulatedClusterElements","getters","_this$value$spec2","length","push","key","operator","values","metadata","labels","convert","ELEMENTAL_PRODUCT_NAME","methods","set","arr","uniqueLabels","forEach","_item$metadata","_item$metadata2","Object","keys","_item$metadata3","objKeys","includes","simplify","throttle","_match$","all","match","matching","matched","sample","nameDisplay","total","leading","component","___CSS_LOADER_API_IMPORT___","exports","module","i","content","__esModule","default","locals","add"],"mappings":"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","file":"elemental-2.0.2.umd.min.machine-config.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('h2',{directives:[{name:\"t\",rawName:\"v-t\",value:('elemental.clusterGroup.selector.label'),expression:\"'elemental.clusterGroup.selector.label'\"}],staticClass:\"mt-20 mb-5\"}),_c('p',{staticClass:\"user-warn mb-20\"},[_vm._v(_vm._s(_vm.t('elemental.clusterGroup.helper', {}, true)))]),_c('MatchExpressions',{staticClass:\"mb-40\",attrs:{\"mode\":_vm.mode,\"type\":_vm.elementalType,\"value\":_vm.expressions,\"show-remove\":false,\"keys-select-options\":_vm.machineInventorySelectorKeyOptions},on:{\"input\":function($event){return _vm.matchChanged($event)}}}),(_vm.matchingMachineInventories)?_c('Banner',{attrs:{\"color\":(_vm.matchingMachineInventories.isNone || _vm.matchingMachineInventories.isAll ? 'warning' : 'success')}},[(_vm.matchingMachineInventories.isAll)?_c('span',{directives:[{name:\"clean-html\",rawName:\"v-clean-html\",value:(_vm.t('elemental.clusterGroup.selector.matchesAll', _vm.matchingMachineInventories)),expression:\"t('elemental.clusterGroup.selector.matchesAll', matchingMachineInventories)\"}]}):(_vm.matchingMachineInventories.isNone)?_c('span',{directives:[{name:\"clean-html\",rawName:\"v-clean-html\",value:(_vm.t('elemental.clusterGroup.selector.matchesNone', _vm.matchingMachineInventories)),expression:\"t('elemental.clusterGroup.selector.matchesNone', matchingMachineInventories)\"}]}):_c('span',{directives:[{name:\"clean-html\",rawName:\"v-clean-html\",value:(_vm.t('elemental.clusterGroup.selector.matchesSome', _vm.matchingMachineInventories)),expression:\"t('elemental.clusterGroup.selector.matchesSome', matchingMachineInventories)\"}]})]):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { Banner } from '@components/Banner';\nimport { set } from '@shell/utils/object';\nimport { convert, matching, simplify } from '@shell/utils/selector';\nimport throttle from 'lodash/throttle';\nimport { ELEMENTAL_SCHEMA_IDS, ELEMENTAL_PRODUCT_NAME } from '../config/elemental-types';\n\nexport default {\n  components: { MatchExpressions, Banner },\n  mixins:     [CreateEditView],\n  async fetch() {\n    this.machineInventories = await this.$store.dispatch('management/findAll', { type: ELEMENTAL_SCHEMA_IDS.MACHINE_INVENTORIES });\n    this.machineInventorySelectorKeyOptions = this.getUniqueLabels(this.machineInventories).map((item) => {\n      return {\n        label: item,\n        value: item\n      };\n    });\n    this.updateMatchingMachineInventories();\n  },\n  data() {\n    if ( !this.value.spec?.template?.spec?.selector ) {\n      this.value.spec.template.spec = this.value.spec.template.spec || {};\n      this.value.spec.template.spec.selector = {\n        matchExpressions: [],\n        matchLabels:      {},\n      };\n    }\n\n    // TODO: this should only run if Elemental is installed... maybe prevent the display of Elemental type in cluster create selection screen if\n    // helm chart is not installed\n    const prePopulatedClusterElements = this.$store.getters['elemental/createClusterElements'];\n\n    // pre-populate the selectors if we come from the create cluster action on machine inventories list\n    if (prePopulatedClusterElements.length) {\n      this.value.spec.template.spec.selector.matchExpressions.push({\n        key:      'create-cluster-selector',\n        operator: 'In',\n        values:   [prePopulatedClusterElements[0].metadata.labels['create-cluster-selector']],\n      });\n\n      if (!this.value.spec?.template?.spec?.selector?.matchLabels) {\n        this.value.spec.template.spec.selector.matchLabels = {};\n      }\n\n      this.value.spec.template.spec.selector.matchLabels['create-cluster-selector'] = prePopulatedClusterElements[0].metadata.labels['create-cluster-selector'];\n\n      // cleanup so that it doesn't get reused inadvertedly\n      this.$store.dispatch('elemental/updateCreateClusterElements', []);\n    }\n\n    const expressions = convert(\n      this.value.spec.template.spec.selector.matchLabels || {},\n      this.value.spec.template.spec.selector.matchExpressions || []\n    );\n\n    return {\n      elementalType:                      ELEMENTAL_PRODUCT_NAME,\n      machineInventories:                 null,\n      matchingMachineInventories:         null,\n      machineInventorySelectorKeyOptions: null,\n      expressions\n    };\n  },\n  methods: {\n    set,\n    getUniqueLabels(arr) {\n      const uniqueLabels = [];\n\n      arr.forEach((item) => {\n        if (item.metadata?.labels && Object.keys(item.metadata?.labels).length) {\n          const objKeys = Object.keys(item.metadata?.labels);\n\n          objKeys.forEach((key) => {\n            if (!uniqueLabels.includes(key)) {\n              uniqueLabels.push(key);\n            }\n          });\n        }\n      });\n\n      return uniqueLabels;\n    },\n    matchChanged(expressions) {\n      const { matchLabels, matchExpressions } = simplify(expressions);\n\n      set(this, 'expressions', expressions);\n      set(this, 'value.spec.template.spec.selector.matchLabels', matchLabels);\n      set(this, 'value.spec.template.spec.selector.matchExpressions', matchExpressions);\n\n      this.updateMatchingMachineInventories();\n    },\n\n    updateMatchingMachineInventories: throttle(function() {\n      const all = this.machineInventories;\n      const match = matching(all, this.expressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      this.matchingMachineInventories = {\n        matched,\n        total:   all.length,\n        isAll:   matched === all.length,\n        isNone:  matched === 0,\n        sample,\n      };\n    }, 250, { leading: true })\n  },\n};\n</script>\n\n<template>\n  <div>\n    <h2 v-t=\"'elemental.clusterGroup.selector.label'\" class=\"mt-20 mb-5\" />\n    <p class=\"user-warn mb-20\">{{ t('elemental.clusterGroup.helper', {}, true) }}</p>\n    <MatchExpressions\n      :mode=\"mode\"\n      :type=\"elementalType\"\n      :value=\"expressions\"\n      :show-remove=\"false\"\n      :keys-select-options=\"machineInventorySelectorKeyOptions\"\n      @input=\"matchChanged($event)\"\n      class=\"mb-40\"\n    />\n    <Banner v-if=\"matchingMachineInventories\" :color=\"(matchingMachineInventories.isNone || matchingMachineInventories.isAll ? 'warning' : 'success')\">\n      <span v-if=\"matchingMachineInventories.isAll\" v-clean-html=\"t('elemental.clusterGroup.selector.matchesAll', matchingMachineInventories)\" />\n      <span v-else-if=\"matchingMachineInventories.isNone\" v-clean-html=\"t('elemental.clusterGroup.selector.matchesNone', matchingMachineInventories)\" />\n      <span\n        v-else\n        v-clean-html=\"t('elemental.clusterGroup.selector.matchesSome', matchingMachineInventories)\"\n      />\n    </Banner>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.user-warn {\n  font-size: 13px;\n  color: var(--darker);\n}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./machineinventoryselectortemplate.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./machineinventoryselectortemplate.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./machineinventoryselectortemplate.vue?vue&type=template&id=4cb59cc4&scoped=true\"\nimport script from \"./machineinventoryselectortemplate.vue?vue&type=script&lang=js\"\nexport * from \"./machineinventoryselectortemplate.vue?vue&type=script&lang=js\"\nimport style0 from \"./machineinventoryselectortemplate.vue?vue&type=style&index=0&id=4cb59cc4&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4cb59cc4\",\n  null\n  \n)\n\nexport default component.exports","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".user-warn[data-v-4cb59cc4]{font-size:13px;color:var(--darker)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export * from \"-!../../../node_modules/vue-style-loader/index.js??ref--10-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./machineinventoryselectortemplate.vue?vue&type=style&index=0&id=4cb59cc4&prod&lang=scss&scoped=true\"","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-3!../../../node_modules/sass-loader/dist/cjs.js??ref--10-oneOf-1-4!../../../node_modules/cache-loader/dist/cjs.js??ref--2-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./machineinventoryselectortemplate.vue?vue&type=style&index=0&id=4cb59cc4&prod&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"18aadf75\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"sourceRoot":""}